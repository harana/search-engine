/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionsBillingUsage {
    /// The sum of the free and paid GitHub Actions minutes used.
    #[serde(rename = "total_minutes_used")]
    pub total_minutes_used: i32,
    /// The total paid GitHub Actions minutes used.
    #[serde(rename = "total_paid_minutes_used")]
    pub total_paid_minutes_used: i32,
    /// The amount of free GitHub Actions minutes available.
    #[serde(rename = "included_minutes")]
    pub included_minutes: i32,
    #[serde(rename = "minutes_used_breakdown")]
    pub minutes_used_breakdown: Box<models::ActionsBillingUsageMinutesUsedBreakdown>,
}

impl ActionsBillingUsage {
    pub fn new(total_minutes_used: i32, total_paid_minutes_used: i32, included_minutes: i32, minutes_used_breakdown: models::ActionsBillingUsageMinutesUsedBreakdown) -> ActionsBillingUsage {
        ActionsBillingUsage {
            total_minutes_used,
            total_paid_minutes_used,
            included_minutes,
            minutes_used_breakdown: Box::new(minutes_used_breakdown),
        }
    }
}

