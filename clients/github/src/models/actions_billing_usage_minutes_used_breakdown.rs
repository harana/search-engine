/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionsBillingUsageMinutesUsedBreakdown {
    /// Total minutes used on Ubuntu runner machines.
    #[serde(rename = "UBUNTU", skip_serializing_if = "Option::is_none")]
    pub ubuntu: Option<i32>,
    /// Total minutes used on macOS runner machines.
    #[serde(rename = "MACOS", skip_serializing_if = "Option::is_none")]
    pub macos: Option<i32>,
    /// Total minutes used on Windows runner machines.
    #[serde(rename = "WINDOWS", skip_serializing_if = "Option::is_none")]
    pub windows: Option<i32>,
    /// Total minutes used on Ubuntu 4 core runner machines.
    #[serde(rename = "ubuntu_4_core", skip_serializing_if = "Option::is_none")]
    pub ubuntu_4_core: Option<i32>,
    /// Total minutes used on Ubuntu 8 core runner machines.
    #[serde(rename = "ubuntu_8_core", skip_serializing_if = "Option::is_none")]
    pub ubuntu_8_core: Option<i32>,
    /// Total minutes used on Ubuntu 16 core runner machines.
    #[serde(rename = "ubuntu_16_core", skip_serializing_if = "Option::is_none")]
    pub ubuntu_16_core: Option<i32>,
    /// Total minutes used on Ubuntu 32 core runner machines.
    #[serde(rename = "ubuntu_32_core", skip_serializing_if = "Option::is_none")]
    pub ubuntu_32_core: Option<i32>,
    /// Total minutes used on Ubuntu 64 core runner machines.
    #[serde(rename = "ubuntu_64_core", skip_serializing_if = "Option::is_none")]
    pub ubuntu_64_core: Option<i32>,
    /// Total minutes used on Windows 4 core runner machines.
    #[serde(rename = "windows_4_core", skip_serializing_if = "Option::is_none")]
    pub windows_4_core: Option<i32>,
    /// Total minutes used on Windows 8 core runner machines.
    #[serde(rename = "windows_8_core", skip_serializing_if = "Option::is_none")]
    pub windows_8_core: Option<i32>,
    /// Total minutes used on Windows 16 core runner machines.
    #[serde(rename = "windows_16_core", skip_serializing_if = "Option::is_none")]
    pub windows_16_core: Option<i32>,
    /// Total minutes used on Windows 32 core runner machines.
    #[serde(rename = "windows_32_core", skip_serializing_if = "Option::is_none")]
    pub windows_32_core: Option<i32>,
    /// Total minutes used on Windows 64 core runner machines.
    #[serde(rename = "windows_64_core", skip_serializing_if = "Option::is_none")]
    pub windows_64_core: Option<i32>,
    /// Total minutes used on macOS 12 core runner machines.
    #[serde(rename = "macos_12_core", skip_serializing_if = "Option::is_none")]
    pub macos_12_core: Option<i32>,
    /// Total minutes used on all runner machines.
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
}

impl ActionsBillingUsageMinutesUsedBreakdown {
    pub fn new() -> ActionsBillingUsageMinutesUsedBreakdown {
        ActionsBillingUsageMinutesUsedBreakdown {
            ubuntu: None,
            macos: None,
            windows: None,
            ubuntu_4_core: None,
            ubuntu_8_core: None,
            ubuntu_16_core: None,
            ubuntu_32_core: None,
            ubuntu_64_core: None,
            windows_4_core: None,
            windows_8_core: None,
            windows_16_core: None,
            windows_32_core: None,
            windows_64_core: None,
            macos_12_core: None,
            total: None,
        }
    }
}

