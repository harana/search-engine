/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionsRepositoryPermissions {
    /// Whether GitHub Actions is enabled on the repository.
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "allowed_actions", skip_serializing_if = "Option::is_none")]
    pub allowed_actions: Option<models::AllowedActions>,
    /// The API URL to use to get or set the actions and reusable workflows that are allowed to run, when `allowed_actions` is set to `selected`.
    #[serde(rename = "selected_actions_url", skip_serializing_if = "Option::is_none")]
    pub selected_actions_url: Option<String>,
}

impl ActionsRepositoryPermissions {
    pub fn new(enabled: bool) -> ActionsRepositoryPermissions {
        ActionsRepositoryPermissions {
            enabled,
            allowed_actions: None,
            selected_actions_url: None,
        }
    }
}

