/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionsUpdateHostedRunnerForOrgRequest {
    /// Name of the runner. Must be between 1 and 64 characters and may only contain upper and lowercase letters a-z, numbers 0-9, '.', '-', and '_'.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The existing runner group to add this runner to.
    #[serde(rename = "runner_group_id", skip_serializing_if = "Option::is_none")]
    pub runner_group_id: Option<i32>,
    /// The maximum amount of runners to scale up to. Runners will not auto-scale above this number. Use this setting to limit your cost.
    #[serde(rename = "maximum_runners", skip_serializing_if = "Option::is_none")]
    pub maximum_runners: Option<i32>,
    /// Whether this runner should be updated with a static public IP. Note limit on account. To list limits on account, use `GET actions/hosted-runners/limits`
    #[serde(rename = "enable_static_ip", skip_serializing_if = "Option::is_none")]
    pub enable_static_ip: Option<bool>,
}

impl ActionsUpdateHostedRunnerForOrgRequest {
    pub fn new() -> ActionsUpdateHostedRunnerForOrgRequest {
        ActionsUpdateHostedRunnerForOrgRequest {
            name: None,
            runner_group_id: None,
            maximum_runners: None,
            enable_static_ip: None,
        }
    }
}

