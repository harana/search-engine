/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionsUpdateSelfHostedRunnerGroupForOrgRequest {
    /// Name of the runner group.
    #[serde(rename = "name")]
    pub name: String,
    /// Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.
    #[serde(rename = "visibility", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<Visibility>,
    /// Whether the runner group can be used by `public` repositories.
    #[serde(rename = "allows_public_repositories", skip_serializing_if = "Option::is_none")]
    pub allows_public_repositories: Option<bool>,
    /// If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.
    #[serde(rename = "restricted_to_workflows", skip_serializing_if = "Option::is_none")]
    pub restricted_to_workflows: Option<bool>,
    /// List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.
    #[serde(rename = "selected_workflows", skip_serializing_if = "Option::is_none")]
    pub selected_workflows: Option<Vec<String>>,
    /// The identifier of a hosted compute network configuration.
    #[serde(rename = "network_configuration_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub network_configuration_id: Option<Option<String>>,
}

impl ActionsUpdateSelfHostedRunnerGroupForOrgRequest {
    pub fn new(name: String) -> ActionsUpdateSelfHostedRunnerGroupForOrgRequest {
        ActionsUpdateSelfHostedRunnerGroupForOrgRequest {
            name,
            visibility: None,
            allows_public_repositories: None,
            restricted_to_workflows: None,
            selected_workflows: None,
            network_configuration_id: None,
        }
    }
}
/// Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "selected")]
    Selected,
    #[serde(rename = "all")]
    All,
    #[serde(rename = "private")]
    Private,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::Selected
    }
}

