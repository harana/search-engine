/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiInsightsRouteStatsInner {
    /// The HTTP method
    #[serde(rename = "http_method", skip_serializing_if = "Option::is_none")]
    pub http_method: Option<String>,
    /// The API path's route template
    #[serde(rename = "api_route", skip_serializing_if = "Option::is_none")]
    pub api_route: Option<String>,
    /// The total number of requests within the queried time period
    #[serde(rename = "total_request_count", skip_serializing_if = "Option::is_none")]
    pub total_request_count: Option<i64>,
    /// The total number of requests that were rate limited within the queried time period
    #[serde(rename = "rate_limited_request_count", skip_serializing_if = "Option::is_none")]
    pub rate_limited_request_count: Option<i64>,
    #[serde(rename = "last_rate_limited_timestamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_rate_limited_timestamp: Option<Option<String>>,
    #[serde(rename = "last_request_timestamp", skip_serializing_if = "Option::is_none")]
    pub last_request_timestamp: Option<String>,
}

impl ApiInsightsRouteStatsInner {
    pub fn new() -> ApiInsightsRouteStatsInner {
        ApiInsightsRouteStatsInner {
            http_method: None,
            api_route: None,
            total_request_count: None,
            rate_limited_request_count: None,
            last_rate_limited_timestamp: None,
            last_request_timestamp: None,
        }
    }
}

