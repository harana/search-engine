/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiInsightsSubjectStatsInner {
    #[serde(rename = "subject_type", skip_serializing_if = "Option::is_none")]
    pub subject_type: Option<String>,
    #[serde(rename = "subject_name", skip_serializing_if = "Option::is_none")]
    pub subject_name: Option<String>,
    #[serde(rename = "subject_id", skip_serializing_if = "Option::is_none")]
    pub subject_id: Option<i64>,
    #[serde(rename = "total_request_count", skip_serializing_if = "Option::is_none")]
    pub total_request_count: Option<i32>,
    #[serde(rename = "rate_limited_request_count", skip_serializing_if = "Option::is_none")]
    pub rate_limited_request_count: Option<i32>,
    #[serde(rename = "last_rate_limited_timestamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_rate_limited_timestamp: Option<Option<String>>,
    #[serde(rename = "last_request_timestamp", skip_serializing_if = "Option::is_none")]
    pub last_request_timestamp: Option<String>,
}

impl ApiInsightsSubjectStatsInner {
    pub fn new() -> ApiInsightsSubjectStatsInner {
        ApiInsightsSubjectStatsInner {
            subject_type: None,
            subject_name: None,
            subject_id: None,
            total_request_count: None,
            rate_limited_request_count: None,
            last_rate_limited_timestamp: None,
            last_request_timestamp: None,
        }
    }
}

