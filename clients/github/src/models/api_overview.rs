/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApiOverview : Api Overview
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiOverview {
    #[serde(rename = "verifiable_password_authentication")]
    pub verifiable_password_authentication: bool,
    #[serde(rename = "ssh_key_fingerprints", skip_serializing_if = "Option::is_none")]
    pub ssh_key_fingerprints: Option<Box<models::ApiOverviewSshKeyFingerprints>>,
    #[serde(rename = "ssh_keys", skip_serializing_if = "Option::is_none")]
    pub ssh_keys: Option<Vec<String>>,
    #[serde(rename = "hooks", skip_serializing_if = "Option::is_none")]
    pub hooks: Option<Vec<String>>,
    #[serde(rename = "github_enterprise_importer", skip_serializing_if = "Option::is_none")]
    pub github_enterprise_importer: Option<Vec<String>>,
    #[serde(rename = "web", skip_serializing_if = "Option::is_none")]
    pub web: Option<Vec<String>>,
    #[serde(rename = "api", skip_serializing_if = "Option::is_none")]
    pub api: Option<Vec<String>>,
    #[serde(rename = "git", skip_serializing_if = "Option::is_none")]
    pub git: Option<Vec<String>>,
    #[serde(rename = "packages", skip_serializing_if = "Option::is_none")]
    pub packages: Option<Vec<String>>,
    #[serde(rename = "pages", skip_serializing_if = "Option::is_none")]
    pub pages: Option<Vec<String>>,
    #[serde(rename = "importer", skip_serializing_if = "Option::is_none")]
    pub importer: Option<Vec<String>>,
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<String>>,
    #[serde(rename = "actions_macos", skip_serializing_if = "Option::is_none")]
    pub actions_macos: Option<Vec<String>>,
    #[serde(rename = "codespaces", skip_serializing_if = "Option::is_none")]
    pub codespaces: Option<Vec<String>>,
    #[serde(rename = "dependabot", skip_serializing_if = "Option::is_none")]
    pub dependabot: Option<Vec<String>>,
    #[serde(rename = "copilot", skip_serializing_if = "Option::is_none")]
    pub copilot: Option<Vec<String>>,
    #[serde(rename = "domains", skip_serializing_if = "Option::is_none")]
    pub domains: Option<Box<models::ApiOverviewDomains>>,
}

impl ApiOverview {
    /// Api Overview
    pub fn new(verifiable_password_authentication: bool) -> ApiOverview {
        ApiOverview {
            verifiable_password_authentication,
            ssh_key_fingerprints: None,
            ssh_keys: None,
            hooks: None,
            github_enterprise_importer: None,
            web: None,
            api: None,
            git: None,
            packages: None,
            pages: None,
            importer: None,
            actions: None,
            actions_macos: None,
            codespaces: None,
            dependabot: None,
            copilot: None,
            domains: None,
        }
    }
}

