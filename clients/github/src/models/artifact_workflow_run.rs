/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ArtifactWorkflowRun {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "repository_id", skip_serializing_if = "Option::is_none")]
    pub repository_id: Option<i32>,
    #[serde(rename = "head_repository_id", skip_serializing_if = "Option::is_none")]
    pub head_repository_id: Option<i32>,
    #[serde(rename = "head_branch", skip_serializing_if = "Option::is_none")]
    pub head_branch: Option<String>,
    #[serde(rename = "head_sha", skip_serializing_if = "Option::is_none")]
    pub head_sha: Option<String>,
}

impl ArtifactWorkflowRun {
    pub fn new() -> ArtifactWorkflowRun {
        ArtifactWorkflowRun {
            id: None,
            repository_id: None,
            head_repository_id: None,
            head_branch: None,
            head_sha: None,
        }
    }
}

