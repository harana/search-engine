/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Autolink : An autolink reference.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Autolink {
    #[serde(rename = "id")]
    pub id: i32,
    /// The prefix of a key that is linkified.
    #[serde(rename = "key_prefix")]
    pub key_prefix: String,
    /// A template for the target URL that is generated if a key was found.
    #[serde(rename = "url_template")]
    pub url_template: String,
    /// Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
    #[serde(rename = "is_alphanumeric")]
    pub is_alphanumeric: bool,
}

impl Autolink {
    /// An autolink reference.
    pub fn new(id: i32, key_prefix: String, url_template: String, is_alphanumeric: bool) -> Autolink {
        Autolink {
            id,
            key_prefix,
            url_template,
            is_alphanumeric,
        }
    }
}

