/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeScanningAnalysis {
    /// The Git reference, formatted as `refs/pull/<number>/merge`, `refs/pull/<number>/head`, `refs/heads/<branch name>` or simply `<branch name>`.
    #[serde(rename = "ref")]
    pub r#ref: String,
    /// The SHA of the commit to which the analysis you are uploading relates.
    #[serde(rename = "commit_sha")]
    pub commit_sha: String,
    /// Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
    #[serde(rename = "analysis_key")]
    pub analysis_key: String,
    /// Identifies the variable values associated with the environment in which this analysis was performed.
    #[serde(rename = "environment")]
    pub environment: String,
    /// Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    #[serde(rename = "error")]
    pub error: String,
    /// The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The total number of results in the analysis.
    #[serde(rename = "results_count")]
    pub results_count: i32,
    /// The total number of rules used in the analysis.
    #[serde(rename = "rules_count")]
    pub rules_count: i32,
    /// Unique identifier for this analysis.
    #[serde(rename = "id")]
    pub id: i32,
    /// The REST API URL of the analysis resource.
    #[serde(rename = "url")]
    pub url: String,
    /// An identifier for the upload.
    #[serde(rename = "sarif_id")]
    pub sarif_id: String,
    #[serde(rename = "tool")]
    pub tool: Box<models::CodeScanningAnalysisTool>,
    #[serde(rename = "deletable")]
    pub deletable: bool,
    /// Warning generated when processing the analysis
    #[serde(rename = "warning")]
    pub warning: String,
}

impl CodeScanningAnalysis {
    pub fn new(r#ref: String, commit_sha: String, analysis_key: String, environment: String, error: String, created_at: String, results_count: i32, rules_count: i32, id: i32, url: String, sarif_id: String, tool: models::CodeScanningAnalysisTool, deletable: bool, warning: String) -> CodeScanningAnalysis {
        CodeScanningAnalysis {
            r#ref,
            commit_sha,
            analysis_key,
            environment,
            category: None,
            error,
            created_at,
            results_count,
            rules_count,
            id,
            url,
            sarif_id,
            tool: Box::new(tool),
            deletable,
            warning,
        }
    }
}

