/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeScanningAutofixCommits : Commit an autofix for a code scanning alert
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeScanningAutofixCommits {
    /// The Git reference of target branch for the commit. Branch needs to already exist.  For more information, see \"[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)\" in the Git documentation.
    #[serde(rename = "target_ref", skip_serializing_if = "Option::is_none")]
    pub target_ref: Option<String>,
    /// Commit message to be used.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl CodeScanningAutofixCommits {
    /// Commit an autofix for a code scanning alert
    pub fn new() -> CodeScanningAutofixCommits {
        CodeScanningAutofixCommits {
            target_ref: None,
            message: None,
        }
    }
}

