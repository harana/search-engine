/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeScanningAutofixStatus : The status of an autofix.
/// The status of an autofix.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CodeScanningAutofixStatus {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "success")]
    Success,
    #[serde(rename = "outdated")]
    Outdated,

}

impl std::fmt::Display for CodeScanningAutofixStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Pending => write!(f, "pending"),
            Self::Error => write!(f, "error"),
            Self::Success => write!(f, "success"),
            Self::Outdated => write!(f, "outdated"),
        }
    }
}

impl Default for CodeScanningAutofixStatus {
    fn default() -> CodeScanningAutofixStatus {
        Self::Pending
    }
}

