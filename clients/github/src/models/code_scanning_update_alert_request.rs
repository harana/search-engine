/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeScanningUpdateAlertRequest {
    #[serde(rename = "state")]
    pub state: models::CodeScanningAlertSetState,
    #[serde(rename = "dismissed_reason", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub dismissed_reason: Option<Option<models::CodeScanningAlertDismissedReason>>,
    /// The dismissal comment associated with the dismissal of the alert.
    #[serde(rename = "dismissed_comment", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub dismissed_comment: Option<Option<String>>,
    /// If `true`, attempt to create an alert dismissal request.
    #[serde(rename = "create_request", skip_serializing_if = "Option::is_none")]
    pub create_request: Option<bool>,
}

impl CodeScanningUpdateAlertRequest {
    pub fn new(state: models::CodeScanningAlertSetState) -> CodeScanningUpdateAlertRequest {
        CodeScanningUpdateAlertRequest {
            state,
            dismissed_reason: None,
            dismissed_comment: None,
            create_request: None,
        }
    }
}

