/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeScanningVariantAnalysisLanguage : The language targeted by the CodeQL query
/// The language targeted by the CodeQL query
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CodeScanningVariantAnalysisLanguage {
    #[serde(rename = "cpp")]
    Cpp,
    #[serde(rename = "csharp")]
    Csharp,
    #[serde(rename = "go")]
    Go,
    #[serde(rename = "java")]
    Java,
    #[serde(rename = "javascript")]
    Javascript,
    #[serde(rename = "python")]
    Python,
    #[serde(rename = "ruby")]
    Ruby,
    #[serde(rename = "swift")]
    Swift,

}

impl std::fmt::Display for CodeScanningVariantAnalysisLanguage {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Cpp => write!(f, "cpp"),
            Self::Csharp => write!(f, "csharp"),
            Self::Go => write!(f, "go"),
            Self::Java => write!(f, "java"),
            Self::Javascript => write!(f, "javascript"),
            Self::Python => write!(f, "python"),
            Self::Ruby => write!(f, "ruby"),
            Self::Swift => write!(f, "swift"),
        }
    }
}

impl Default for CodeScanningVariantAnalysisLanguage {
    fn default() -> CodeScanningVariantAnalysisLanguage {
        Self::Cpp
    }
}

