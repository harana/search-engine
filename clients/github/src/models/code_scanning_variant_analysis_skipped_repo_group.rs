/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeScanningVariantAnalysisSkippedRepoGroup {
    /// The total number of repositories that were skipped for this reason.
    #[serde(rename = "repository_count")]
    pub repository_count: i32,
    /// A list of repositories that were skipped. This list may not include all repositories that were skipped. This is only available when the repository was found and the user has access to it.
    #[serde(rename = "repositories")]
    pub repositories: Vec<models::CodeScanningVariantAnalysisRepository>,
}

impl CodeScanningVariantAnalysisSkippedRepoGroup {
    pub fn new(repository_count: i32, repositories: Vec<models::CodeScanningVariantAnalysisRepository>) -> CodeScanningVariantAnalysisSkippedRepoGroup {
        CodeScanningVariantAnalysisSkippedRepoGroup {
            repository_count,
            repositories,
        }
    }
}

