/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeSecurityConfigurationCodeScanningDefaultSetupOptions : Feature options for code scanning default setup
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeSecurityConfigurationCodeScanningDefaultSetupOptions {
    /// Whether to use labeled runners or standard GitHub runners.
    #[serde(rename = "runner_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub runner_type: Option<Option<RunnerType>>,
    /// The label of the runner to use for code scanning when runner_type is 'labeled'.
    #[serde(rename = "runner_label", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub runner_label: Option<Option<String>>,
}

impl CodeSecurityConfigurationCodeScanningDefaultSetupOptions {
    /// Feature options for code scanning default setup
    pub fn new() -> CodeSecurityConfigurationCodeScanningDefaultSetupOptions {
        CodeSecurityConfigurationCodeScanningDefaultSetupOptions {
            runner_type: None,
            runner_label: None,
        }
    }
}
/// Whether to use labeled runners or standard GitHub runners.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RunnerType {
    #[serde(rename = "standard")]
    Standard,
    #[serde(rename = "labeled")]
    Labeled,
    #[serde(rename = "not_set")]
    NotSet,
}

impl Default for RunnerType {
    fn default() -> RunnerType {
        Self::Standard
    }
}

