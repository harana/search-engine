/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodeSecurityCreateConfigurationRequestSecretScanningDelegatedBypassOptionsReviewersInner {
    /// The ID of the team or role selected as a bypass reviewer
    #[serde(rename = "reviewer_id")]
    pub reviewer_id: i32,
    /// The type of the bypass reviewer
    #[serde(rename = "reviewer_type")]
    pub reviewer_type: ReviewerType,
}

impl CodeSecurityCreateConfigurationRequestSecretScanningDelegatedBypassOptionsReviewersInner {
    pub fn new(reviewer_id: i32, reviewer_type: ReviewerType) -> CodeSecurityCreateConfigurationRequestSecretScanningDelegatedBypassOptionsReviewersInner {
        CodeSecurityCreateConfigurationRequestSecretScanningDelegatedBypassOptionsReviewersInner {
            reviewer_id,
            reviewer_type,
        }
    }
}
/// The type of the bypass reviewer
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReviewerType {
    #[serde(rename = "TEAM")]
    Team,
    #[serde(rename = "ROLE")]
    Role,
}

impl Default for ReviewerType {
    fn default() -> ReviewerType {
        Self::Team
    }
}

