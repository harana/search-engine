/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodespaceGitStatus : Details about the codespace's git repository.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodespaceGitStatus {
    /// The number of commits the local repository is ahead of the remote.
    #[serde(rename = "ahead", skip_serializing_if = "Option::is_none")]
    pub ahead: Option<i32>,
    /// The number of commits the local repository is behind the remote.
    #[serde(rename = "behind", skip_serializing_if = "Option::is_none")]
    pub behind: Option<i32>,
    /// Whether the local repository has unpushed changes.
    #[serde(rename = "has_unpushed_changes", skip_serializing_if = "Option::is_none")]
    pub has_unpushed_changes: Option<bool>,
    /// Whether the local repository has uncommitted changes.
    #[serde(rename = "has_uncommitted_changes", skip_serializing_if = "Option::is_none")]
    pub has_uncommitted_changes: Option<bool>,
    /// The current branch (or SHA if in detached HEAD state) of the local repository.
    #[serde(rename = "ref", skip_serializing_if = "Option::is_none")]
    pub r#ref: Option<String>,
}

impl CodespaceGitStatus {
    /// Details about the codespace's git repository.
    pub fn new() -> CodespaceGitStatus {
        CodespaceGitStatus {
            ahead: None,
            behind: None,
            has_unpushed_changes: None,
            has_uncommitted_changes: None,
            r#ref: None,
        }
    }
}

