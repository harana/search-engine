/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CodespacesSetCodespacesAccessRequest {
    /// Which users can access codespaces in the organization. `disabled` means that no users can access codespaces in the organization.
    #[serde(rename = "visibility")]
    pub visibility: Visibility,
    /// The usernames of the organization members who should have access to codespaces in the organization. Required when `visibility` is `selected_members`. The provided list of usernames will replace any existing value.
    #[serde(rename = "selected_usernames", skip_serializing_if = "Option::is_none")]
    pub selected_usernames: Option<Vec<String>>,
}

impl CodespacesSetCodespacesAccessRequest {
    pub fn new(visibility: Visibility) -> CodespacesSetCodespacesAccessRequest {
        CodespacesSetCodespacesAccessRequest {
            visibility,
            selected_usernames: None,
        }
    }
}
/// Which users can access codespaces in the organization. `disabled` means that no users can access codespaces in the organization.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "disabled")]
    Disabled,
    #[serde(rename = "selected_members")]
    SelectedMembers,
    #[serde(rename = "all_members")]
    AllMembers,
    #[serde(rename = "all_members_and_outside_collaborators")]
    AllMembersAndOutsideCollaborators,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::Disabled
    }
}

