/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CombinedCommitStatus : Combined Commit Status
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CombinedCommitStatus {
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "statuses")]
    pub statuses: Vec<models::SimpleCommitStatus>,
    #[serde(rename = "sha")]
    pub sha: String,
    #[serde(rename = "total_count")]
    pub total_count: i32,
    #[serde(rename = "repository")]
    pub repository: Box<models::MinimalRepository>,
    #[serde(rename = "commit_url")]
    pub commit_url: String,
    #[serde(rename = "url")]
    pub url: String,
}

impl CombinedCommitStatus {
    /// Combined Commit Status
    pub fn new(state: String, statuses: Vec<models::SimpleCommitStatus>, sha: String, total_count: i32, repository: models::MinimalRepository, commit_url: String, url: String) -> CombinedCommitStatus {
        CombinedCommitStatus {
            state,
            statuses,
            sha,
            total_count,
            repository: Box::new(repository),
            commit_url,
            url,
        }
    }
}

