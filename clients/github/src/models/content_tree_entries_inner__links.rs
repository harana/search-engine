/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentTreeEntriesInnerLinks {
    #[serde(rename = "git", deserialize_with = "Option::deserialize")]
    pub git: Option<String>,
    #[serde(rename = "html", deserialize_with = "Option::deserialize")]
    pub html: Option<String>,
    #[serde(rename = "self")]
    pub param_self: String,
}

impl ContentTreeEntriesInnerLinks {
    pub fn new(git: Option<String>, html: Option<String>, param_self: String) -> ContentTreeEntriesInnerLinks {
        ContentTreeEntriesInnerLinks {
            git,
            html,
            param_self,
        }
    }
}

