/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CopilotIdeCodeCompletions : Usage metrics for Copilot editor code completions in the IDE.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CopilotIdeCodeCompletions {
    /// Number of users who accepted at least one Copilot code suggestion, across all active editors. Includes both full and partial acceptances.
    #[serde(rename = "total_engaged_users", skip_serializing_if = "Option::is_none")]
    pub total_engaged_users: Option<i32>,
    /// Code completion metrics for active languages.
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<models::CopilotIdeCodeCompletionsLanguagesInner>>,
    #[serde(rename = "editors", skip_serializing_if = "Option::is_none")]
    pub editors: Option<Vec<models::CopilotIdeCodeCompletionsEditorsInner>>,
}

impl CopilotIdeCodeCompletions {
    /// Usage metrics for Copilot editor code completions in the IDE.
    pub fn new() -> CopilotIdeCodeCompletions {
        CopilotIdeCodeCompletions {
            total_engaged_users: None,
            languages: None,
            editors: None,
        }
    }
}

