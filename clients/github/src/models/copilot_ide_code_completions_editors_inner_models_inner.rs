/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CopilotIdeCodeCompletionsEditorsInnerModelsInner {
    /// Name of the model used for Copilot code completion suggestions. If the default model is used will appear as 'default'.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Indicates whether a model is custom or default.
    #[serde(rename = "is_custom_model", skip_serializing_if = "Option::is_none")]
    pub is_custom_model: Option<bool>,
    /// The training date for the custom model.
    #[serde(rename = "custom_model_training_date", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_model_training_date: Option<Option<String>>,
    /// Number of users who accepted at least one Copilot code completion suggestion for the given editor, for the given language and model. Includes both full and partial acceptances.
    #[serde(rename = "total_engaged_users", skip_serializing_if = "Option::is_none")]
    pub total_engaged_users: Option<i32>,
    /// Code completion metrics for active languages, for the given editor.
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<models::CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner>>,
}

impl CopilotIdeCodeCompletionsEditorsInnerModelsInner {
    pub fn new() -> CopilotIdeCodeCompletionsEditorsInnerModelsInner {
        CopilotIdeCodeCompletionsEditorsInnerModelsInner {
            name: None,
            is_custom_model: None,
            custom_model_training_date: None,
            total_engaged_users: None,
            languages: None,
        }
    }
}

