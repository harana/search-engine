/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner : Usage metrics for a given language for the given editor for Copilot code completions.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner {
    /// Name of the language used for Copilot code completion suggestions, for the given editor.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Number of users who accepted at least one Copilot code completion suggestion for the given editor, for the given language. Includes both full and partial acceptances.
    #[serde(rename = "total_engaged_users", skip_serializing_if = "Option::is_none")]
    pub total_engaged_users: Option<i32>,
    /// The number of Copilot code suggestions generated for the given editor, for the given language.
    #[serde(rename = "total_code_suggestions", skip_serializing_if = "Option::is_none")]
    pub total_code_suggestions: Option<i32>,
    /// The number of Copilot code suggestions accepted for the given editor, for the given language. Includes both full and partial acceptances.
    #[serde(rename = "total_code_acceptances", skip_serializing_if = "Option::is_none")]
    pub total_code_acceptances: Option<i32>,
    /// The number of lines of code suggested by Copilot code completions for the given editor, for the given language.
    #[serde(rename = "total_code_lines_suggested", skip_serializing_if = "Option::is_none")]
    pub total_code_lines_suggested: Option<i32>,
    /// The number of lines of code accepted from Copilot code suggestions for the given editor, for the given language.
    #[serde(rename = "total_code_lines_accepted", skip_serializing_if = "Option::is_none")]
    pub total_code_lines_accepted: Option<i32>,
}

impl CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner {
    /// Usage metrics for a given language for the given editor for Copilot code completions.
    pub fn new() -> CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner {
        CopilotIdeCodeCompletionsEditorsInnerModelsInnerLanguagesInner {
            name: None,
            total_engaged_users: None,
            total_code_suggestions: None,
            total_code_acceptances: None,
            total_code_lines_suggested: None,
            total_code_lines_accepted: None,
        }
    }
}

