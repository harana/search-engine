/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CvssSeveritiesCvssV3 {
    /// The CVSS 3 vector string.
    #[serde(rename = "vector_string", deserialize_with = "Option::deserialize")]
    pub vector_string: Option<String>,
    /// The CVSS 3 score.
    #[serde(rename = "score", deserialize_with = "Option::deserialize")]
    pub score: Option<f64>,
}

impl CvssSeveritiesCvssV3 {
    pub fn new(vector_string: Option<String>, score: Option<f64>) -> CvssSeveritiesCvssV3 {
        CvssSeveritiesCvssV3 {
            vector_string,
            score,
        }
    }
}

