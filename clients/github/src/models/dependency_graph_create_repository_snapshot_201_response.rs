/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DependencyGraphCreateRepositorySnapshot201Response {
    /// ID of the created snapshot.
    #[serde(rename = "id")]
    pub id: i32,
    /// The time at which the snapshot was created.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// Either \"SUCCESS\", \"ACCEPTED\", or \"INVALID\". \"SUCCESS\" indicates that the snapshot was successfully created and the repository's dependencies were updated. \"ACCEPTED\" indicates that the snapshot was successfully created, but the repository's dependencies were not updated. \"INVALID\" indicates that the snapshot was malformed.
    #[serde(rename = "result")]
    pub result: String,
    /// A message providing further details about the result, such as why the dependencies were not updated.
    #[serde(rename = "message")]
    pub message: String,
}

impl DependencyGraphCreateRepositorySnapshot201Response {
    pub fn new(id: i32, created_at: String, result: String, message: String) -> DependencyGraphCreateRepositorySnapshot201Response {
        DependencyGraphCreateRepositorySnapshot201Response {
            id,
            created_at,
            result,
            message,
        }
    }
}

