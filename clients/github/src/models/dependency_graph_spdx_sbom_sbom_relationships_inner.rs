/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DependencyGraphSpdxSbomSbomRelationshipsInner {
    /// The type of relationship between the two SPDX elements.
    #[serde(rename = "relationshipType", skip_serializing_if = "Option::is_none")]
    pub relationship_type: Option<String>,
    /// The SPDX identifier of the package that is the source of the relationship.
    #[serde(rename = "spdxElementId", skip_serializing_if = "Option::is_none")]
    pub spdx_element_id: Option<String>,
    /// The SPDX identifier of the package that is the target of the relationship.
    #[serde(rename = "relatedSpdxElement", skip_serializing_if = "Option::is_none")]
    pub related_spdx_element: Option<String>,
}

impl DependencyGraphSpdxSbomSbomRelationshipsInner {
    pub fn new() -> DependencyGraphSpdxSbomSbomRelationshipsInner {
        DependencyGraphSpdxSbomSbomRelationshipsInner {
            relationship_type: None,
            spdx_element_id: None,
            related_spdx_element: None,
        }
    }
}

