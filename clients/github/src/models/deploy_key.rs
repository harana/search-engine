/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DeployKey : An SSH key granting access to a single repository.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeployKey {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "verified")]
    pub verified: bool,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "read_only")]
    pub read_only: bool,
    #[serde(rename = "added_by", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub added_by: Option<Option<String>>,
    #[serde(rename = "last_used", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_used: Option<Option<String>>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl DeployKey {
    /// An SSH key granting access to a single repository.
    pub fn new(id: i32, key: String, url: String, title: String, verified: bool, created_at: String, read_only: bool) -> DeployKey {
        DeployKey {
            id,
            key,
            url,
            title,
            verified,
            created_at,
            read_only,
            added_by: None,
            last_used: None,
            enabled: None,
        }
    }
}

