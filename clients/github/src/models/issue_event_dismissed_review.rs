/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueEventDismissedReview {
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "review_id")]
    pub review_id: i32,
    #[serde(rename = "dismissal_message", deserialize_with = "Option::deserialize")]
    pub dismissal_message: Option<String>,
    #[serde(rename = "dismissal_commit_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub dismissal_commit_id: Option<Option<String>>,
}

impl IssueEventDismissedReview {
    pub fn new(state: String, review_id: i32, dismissal_message: Option<String>) -> IssueEventDismissedReview {
        IssueEventDismissedReview {
            state,
            review_id,
            dismissal_message,
            dismissal_commit_id: None,
        }
    }
}

