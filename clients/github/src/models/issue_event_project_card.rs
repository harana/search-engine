/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IssueEventProjectCard : Issue Event Project Card
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueEventProjectCard {
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "project_url")]
    pub project_url: String,
    #[serde(rename = "project_id")]
    pub project_id: i32,
    #[serde(rename = "column_name")]
    pub column_name: String,
    #[serde(rename = "previous_column_name", skip_serializing_if = "Option::is_none")]
    pub previous_column_name: Option<String>,
}

impl IssueEventProjectCard {
    /// Issue Event Project Card
    pub fn new(url: String, id: i32, project_url: String, project_id: i32, column_name: String) -> IssueEventProjectCard {
        IssueEventProjectCard {
            url,
            id,
            project_url,
            project_id,
            column_name,
            previous_column_name: None,
        }
    }
}

