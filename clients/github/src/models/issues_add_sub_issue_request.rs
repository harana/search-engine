/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuesAddSubIssueRequest {
    /// The id of the sub-issue to add. The sub-issue must belong to the same repository owner as the parent issue
    #[serde(rename = "sub_issue_id")]
    pub sub_issue_id: i32,
    /// Option that, when true, instructs the operation to replace the sub-issues current parent issue
    #[serde(rename = "replace_parent", skip_serializing_if = "Option::is_none")]
    pub replace_parent: Option<bool>,
}

impl IssuesAddSubIssueRequest {
    pub fn new(sub_issue_id: i32) -> IssuesAddSubIssueRequest {
        IssuesAddSubIssueRequest {
            sub_issue_id,
            replace_parent: None,
        }
    }
}

