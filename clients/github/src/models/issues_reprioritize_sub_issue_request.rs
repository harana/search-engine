/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuesReprioritizeSubIssueRequest {
    /// The id of the sub-issue to reprioritize
    #[serde(rename = "sub_issue_id")]
    pub sub_issue_id: i32,
    /// The id of the sub-issue to be prioritized after (either positional argument after OR before should be specified).
    #[serde(rename = "after_id", skip_serializing_if = "Option::is_none")]
    pub after_id: Option<i32>,
    /// The id of the sub-issue to be prioritized before (either positional argument after OR before should be specified).
    #[serde(rename = "before_id", skip_serializing_if = "Option::is_none")]
    pub before_id: Option<i32>,
}

impl IssuesReprioritizeSubIssueRequest {
    pub fn new(sub_issue_id: i32) -> IssuesReprioritizeSubIssueRequest {
        IssuesReprioritizeSubIssueRequest {
            sub_issue_id,
            after_id: None,
            before_id: None,
        }
    }
}

