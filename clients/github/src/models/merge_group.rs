/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MergeGroup : A group of pull requests that the merge queue has grouped together to be merged.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MergeGroup {
    /// The SHA of the merge group.
    #[serde(rename = "head_sha")]
    pub head_sha: String,
    /// The full ref of the merge group.
    #[serde(rename = "head_ref")]
    pub head_ref: String,
    /// The SHA of the merge group's parent commit.
    #[serde(rename = "base_sha")]
    pub base_sha: String,
    /// The full ref of the branch the merge group will be merged into.
    #[serde(rename = "base_ref")]
    pub base_ref: String,
    #[serde(rename = "head_commit")]
    pub head_commit: Box<models::SimpleCommit>,
}

impl MergeGroup {
    /// A group of pull requests that the merge queue has grouped together to be merged.
    pub fn new(head_sha: String, head_ref: String, base_sha: String, base_ref: String, head_commit: models::SimpleCommit) -> MergeGroup {
        MergeGroup {
            head_sha,
            head_ref,
            base_sha,
            base_ref,
            head_commit: Box::new(head_commit),
        }
    }
}

