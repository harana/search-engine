/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MigrationsUpdateImportRequest {
    /// The username to provide to the originating repository.
    #[serde(rename = "vcs_username", skip_serializing_if = "Option::is_none")]
    pub vcs_username: Option<String>,
    /// The password to provide to the originating repository.
    #[serde(rename = "vcs_password", skip_serializing_if = "Option::is_none")]
    pub vcs_password: Option<String>,
    /// The type of version control system you are migrating from.
    #[serde(rename = "vcs", skip_serializing_if = "Option::is_none")]
    pub vcs: Option<Vcs>,
    /// For a tfvc import, the name of the project that is being imported.
    #[serde(rename = "tfvc_project", skip_serializing_if = "Option::is_none")]
    pub tfvc_project: Option<String>,
}

impl MigrationsUpdateImportRequest {
    pub fn new() -> MigrationsUpdateImportRequest {
        MigrationsUpdateImportRequest {
            vcs_username: None,
            vcs_password: None,
            vcs: None,
            tfvc_project: None,
        }
    }
}
/// The type of version control system you are migrating from.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Vcs {
    #[serde(rename = "subversion")]
    Subversion,
    #[serde(rename = "tfvc")]
    Tfvc,
    #[serde(rename = "git")]
    Git,
    #[serde(rename = "mercurial")]
    Mercurial,
}

impl Default for Vcs {
    fn default() -> Vcs {
        Self::Subversion
    }
}

