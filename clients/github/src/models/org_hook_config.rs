/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgHookConfig {
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "insecure_ssl", skip_serializing_if = "Option::is_none")]
    pub insecure_ssl: Option<String>,
    #[serde(rename = "content_type", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<String>,
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
}

impl OrgHookConfig {
    pub fn new() -> OrgHookConfig {
        OrgHookConfig {
            url: None,
            insecure_ssl: None,
            content_type: None,
            secret: None,
        }
    }
}

