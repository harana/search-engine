/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrgPrivateRegistryConfigurationWithSelectedRepositories : Private registry configuration for an organization
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgPrivateRegistryConfigurationWithSelectedRepositories {
    /// The name of the private registry configuration.
    #[serde(rename = "name")]
    pub name: String,
    /// The registry type.
    #[serde(rename = "registry_type")]
    pub registry_type: RegistryType,
    /// The username to use when authenticating with the private registry.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// Which type of organization repositories have access to the private registry. `selected` means only the repositories specified by `selected_repository_ids` can access the private registry.
    #[serde(rename = "visibility")]
    pub visibility: Visibility,
    /// An array of repository IDs that can access the organization private registry when `visibility` is set to `selected`.
    #[serde(rename = "selected_repository_ids", skip_serializing_if = "Option::is_none")]
    pub selected_repository_ids: Option<Vec<i32>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl OrgPrivateRegistryConfigurationWithSelectedRepositories {
    /// Private registry configuration for an organization
    pub fn new(name: String, registry_type: RegistryType, visibility: Visibility, created_at: String, updated_at: String) -> OrgPrivateRegistryConfigurationWithSelectedRepositories {
        OrgPrivateRegistryConfigurationWithSelectedRepositories {
            name,
            registry_type,
            username: None,
            visibility,
            selected_repository_ids: None,
            created_at,
            updated_at,
        }
    }
}
/// The registry type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RegistryType {
    #[serde(rename = "maven_repository")]
    MavenRepository,
}

impl Default for RegistryType {
    fn default() -> RegistryType {
        Self::MavenRepository
    }
}
/// Which type of organization repositories have access to the private registry. `selected` means only the repositories specified by `selected_repository_ids` can access the private registry.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "private")]
    Private,
    #[serde(rename = "selected")]
    Selected,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::All
    }
}

