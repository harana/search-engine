/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationFullPlan {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "space")]
    pub space: i32,
    #[serde(rename = "private_repos")]
    pub private_repos: i32,
    #[serde(rename = "filled_seats", skip_serializing_if = "Option::is_none")]
    pub filled_seats: Option<i32>,
    #[serde(rename = "seats", skip_serializing_if = "Option::is_none")]
    pub seats: Option<i32>,
}

impl OrganizationFullPlan {
    pub fn new(name: String, space: i32, private_repos: i32) -> OrganizationFullPlan {
        OrganizationFullPlan {
            name,
            space,
            private_repos,
            filled_seats: None,
            seats: None,
        }
    }
}

