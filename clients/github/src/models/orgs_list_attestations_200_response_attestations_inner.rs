/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgsListAttestations200ResponseAttestationsInner {
    #[serde(rename = "bundle", skip_serializing_if = "Option::is_none")]
    pub bundle: Option<Box<models::OrgsListAttestations200ResponseAttestationsInnerBundle>>,
    #[serde(rename = "repository_id", skip_serializing_if = "Option::is_none")]
    pub repository_id: Option<i32>,
    #[serde(rename = "bundle_url", skip_serializing_if = "Option::is_none")]
    pub bundle_url: Option<String>,
}

impl OrgsListAttestations200ResponseAttestationsInner {
    pub fn new() -> OrgsListAttestations200ResponseAttestationsInner {
        OrgsListAttestations200ResponseAttestationsInner {
            bundle: None,
            repository_id: None,
            bundle_url: None,
        }
    }
}

