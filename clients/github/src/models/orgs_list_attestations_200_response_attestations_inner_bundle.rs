/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrgsListAttestations200ResponseAttestationsInnerBundle : The attestation's Sigstore Bundle. Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto) for more information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgsListAttestations200ResponseAttestationsInnerBundle {
    #[serde(rename = "mediaType", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
    #[serde(rename = "verificationMaterial", skip_serializing_if = "Option::is_none")]
    pub verification_material: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "dsseEnvelope", skip_serializing_if = "Option::is_none")]
    pub dsse_envelope: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl OrgsListAttestations200ResponseAttestationsInnerBundle {
    /// The attestation's Sigstore Bundle. Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto) for more information.
    pub fn new() -> OrgsListAttestations200ResponseAttestationsInnerBundle {
        OrgsListAttestations200ResponseAttestationsInnerBundle {
            media_type: None,
            verification_material: None,
            dsse_envelope: None,
        }
    }
}

