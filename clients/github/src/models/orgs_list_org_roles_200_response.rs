/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgsListOrgRoles200Response {
    /// The total number of organization roles available to the organization.
    #[serde(rename = "total_count", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<i32>,
    /// The list of organization roles available to the organization.
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<models::OrganizationRole>>,
}

impl OrgsListOrgRoles200Response {
    pub fn new() -> OrgsListOrgRoles200Response {
        OrgsListOrgRoles200Response {
            total_count: None,
            roles: None,
        }
    }
}

