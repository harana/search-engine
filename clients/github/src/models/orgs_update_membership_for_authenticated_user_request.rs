/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgsUpdateMembershipForAuthenticatedUserRequest {
    /// The state that the membership should be in. Only `\"active\"` will be accepted.
    #[serde(rename = "state")]
    pub state: State,
}

impl OrgsUpdateMembershipForAuthenticatedUserRequest {
    pub fn new(state: State) -> OrgsUpdateMembershipForAuthenticatedUserRequest {
        OrgsUpdateMembershipForAuthenticatedUserRequest {
            state,
        }
    }
}
/// The state that the membership should be in. Only `\"active\"` will be accepted.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "active")]
    Active,
}

impl Default for State {
    fn default() -> State {
        Self::Active
    }
}

