/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PagesDeploymentStatus {
    /// The current status of the deployment.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl PagesDeploymentStatus {
    pub fn new() -> PagesDeploymentStatus {
        PagesDeploymentStatus {
            status: None,
        }
    }
}
/// The current status of the deployment.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "deployment_in_progress")]
    DeploymentInProgress,
    #[serde(rename = "syncing_files")]
    SyncingFiles,
    #[serde(rename = "finished_file_sync")]
    FinishedFileSync,
    #[serde(rename = "updating_pages")]
    UpdatingPages,
    #[serde(rename = "purging_cdn")]
    PurgingCdn,
    #[serde(rename = "deployment_cancelled")]
    DeploymentCancelled,
    #[serde(rename = "deployment_failed")]
    DeploymentFailed,
    #[serde(rename = "deployment_content_failed")]
    DeploymentContentFailed,
    #[serde(rename = "deployment_attempt_error")]
    DeploymentAttemptError,
    #[serde(rename = "deployment_lost")]
    DeploymentLost,
    #[serde(rename = "succeed")]
    Succeed,
}

impl Default for Status {
    fn default() -> Status {
        Self::DeploymentInProgress
    }
}

