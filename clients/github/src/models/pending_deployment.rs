/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PendingDeployment : Details of a deployment that is waiting for protection rules to pass
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PendingDeployment {
    #[serde(rename = "environment")]
    pub environment: Box<models::PendingDeploymentEnvironment>,
    /// The set duration of the wait timer
    #[serde(rename = "wait_timer")]
    pub wait_timer: i32,
    /// The time that the wait timer began.
    #[serde(rename = "wait_timer_started_at", deserialize_with = "Option::deserialize")]
    pub wait_timer_started_at: Option<String>,
    /// Whether the currently authenticated user can approve the deployment
    #[serde(rename = "current_user_can_approve")]
    pub current_user_can_approve: bool,
    /// The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
    #[serde(rename = "reviewers")]
    pub reviewers: Vec<models::PendingDeploymentReviewersInner>,
}

impl PendingDeployment {
    /// Details of a deployment that is waiting for protection rules to pass
    pub fn new(environment: models::PendingDeploymentEnvironment, wait_timer: i32, wait_timer_started_at: Option<String>, current_user_can_approve: bool, reviewers: Vec<models::PendingDeploymentReviewersInner>) -> PendingDeployment {
        PendingDeployment {
            environment: Box::new(environment),
            wait_timer,
            wait_timer_started_at,
            current_user_can_approve,
            reviewers,
        }
    }
}

