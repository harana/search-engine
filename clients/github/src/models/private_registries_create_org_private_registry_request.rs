/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrivateRegistriesCreateOrgPrivateRegistryRequest {
    /// The registry type.
    #[serde(rename = "registry_type")]
    pub registry_type: RegistryType,
    /// The username to use when authenticating with the private registry. This field should be omitted if the private registry does not require a username for authentication.
    #[serde(rename = "username", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub username: Option<Option<String>>,
    /// The value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get private registries public key for an organization](https://docs.github.com/rest/private-registries/organization-configurations#get-private-registries-public-key-for-an-organization) endpoint.
    #[serde(rename = "encrypted_value")]
    pub encrypted_value: String,
    /// The ID of the key you used to encrypt the secret.
    #[serde(rename = "key_id")]
    pub key_id: String,
    /// Which type of organization repositories have access to the private registry. `selected` means only the repositories specified by `selected_repository_ids` can access the private registry.
    #[serde(rename = "visibility")]
    pub visibility: Visibility,
    /// An array of repository IDs that can access the organization private registry. You can only provide a list of repository IDs when `visibility` is set to `selected`. You can manage the list of selected repositories using the [Update a private registry for an organization](https://docs.github.com/rest/private-registries/organization-configurations#update-a-private-registry-for-an-organization) endpoint. This field should be omitted if `visibility` is set to `all` or `private`.
    #[serde(rename = "selected_repository_ids", skip_serializing_if = "Option::is_none")]
    pub selected_repository_ids: Option<Vec<i32>>,
}

impl PrivateRegistriesCreateOrgPrivateRegistryRequest {
    pub fn new(registry_type: RegistryType, encrypted_value: String, key_id: String, visibility: Visibility) -> PrivateRegistriesCreateOrgPrivateRegistryRequest {
        PrivateRegistriesCreateOrgPrivateRegistryRequest {
            registry_type,
            username: None,
            encrypted_value,
            key_id,
            visibility,
            selected_repository_ids: None,
        }
    }
}
/// The registry type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RegistryType {
    #[serde(rename = "maven_repository")]
    MavenRepository,
}

impl Default for RegistryType {
    fn default() -> RegistryType {
        Self::MavenRepository
    }
}
/// Which type of organization repositories have access to the private registry. `selected` means only the repositories specified by `selected_repository_ids` can access the private registry.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "private")]
    Private,
    #[serde(rename = "selected")]
    Selected,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::All
    }
}

