/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProjectsV2ItemContentType : The type of content tracked in a project item
/// The type of content tracked in a project item
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProjectsV2ItemContentType {
    #[serde(rename = "Issue")]
    Issue,
    #[serde(rename = "PullRequest")]
    PullRequest,
    #[serde(rename = "DraftIssue")]
    DraftIssue,

}

impl std::fmt::Display for ProjectsV2ItemContentType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Issue => write!(f, "Issue"),
            Self::PullRequest => write!(f, "PullRequest"),
            Self::DraftIssue => write!(f, "DraftIssue"),
        }
    }
}

impl Default for ProjectsV2ItemContentType {
    fn default() -> ProjectsV2ItemContentType {
        Self::Issue
    }
}

