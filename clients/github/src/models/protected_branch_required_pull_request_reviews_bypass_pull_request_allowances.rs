/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
    #[serde(rename = "users")]
    pub users: Vec<models::SimpleUser>,
    #[serde(rename = "teams")]
    pub teams: Vec<models::Team>,
    #[serde(rename = "apps", skip_serializing_if = "Option::is_none")]
    pub apps: Option<Vec<models::Integration>>,
}

impl ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
    pub fn new(users: Vec<models::SimpleUser>, teams: Vec<models::Team>) -> ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
        ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
            users,
            teams,
            apps: None,
        }
    }
}

