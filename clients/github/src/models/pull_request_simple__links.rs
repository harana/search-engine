/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PullRequestSimpleLinks {
    #[serde(rename = "comments")]
    pub comments: Box<models::Link>,
    #[serde(rename = "commits")]
    pub commits: Box<models::Link>,
    #[serde(rename = "statuses")]
    pub statuses: Box<models::Link>,
    #[serde(rename = "html")]
    pub html: Box<models::Link>,
    #[serde(rename = "issue")]
    pub issue: Box<models::Link>,
    #[serde(rename = "review_comments")]
    pub review_comments: Box<models::Link>,
    #[serde(rename = "review_comment")]
    pub review_comment: Box<models::Link>,
    #[serde(rename = "self")]
    pub param_self: Box<models::Link>,
}

impl PullRequestSimpleLinks {
    pub fn new(comments: models::Link, commits: models::Link, statuses: models::Link, html: models::Link, issue: models::Link, review_comments: models::Link, review_comment: models::Link, param_self: models::Link) -> PullRequestSimpleLinks {
        PullRequestSimpleLinks {
            comments: Box::new(comments),
            commits: Box::new(commits),
            statuses: Box::new(statuses),
            html: Box::new(html),
            issue: Box::new(issue),
            review_comments: Box::new(review_comments),
            review_comment: Box::new(review_comment),
            param_self: Box::new(param_self),
        }
    }
}

