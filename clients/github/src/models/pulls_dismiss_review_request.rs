/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PullsDismissReviewRequest {
    /// The message for the pull request review dismissal
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "event", skip_serializing_if = "Option::is_none")]
    pub event: Option<Event>,
}

impl PullsDismissReviewRequest {
    pub fn new(message: String) -> PullsDismissReviewRequest {
        PullsDismissReviewRequest {
            message,
            event: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Event {
    #[serde(rename = "DISMISS")]
    Dismiss,
}

impl Default for Event {
    fn default() -> Event {
        Self::Dismiss
    }
}

