/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PullsRemoveRequestedReviewersRequest {
    /// An array of user `login`s that will be removed.
    #[serde(rename = "reviewers")]
    pub reviewers: Vec<String>,
    /// An array of team `slug`s that will be removed.
    #[serde(rename = "team_reviewers", skip_serializing_if = "Option::is_none")]
    pub team_reviewers: Option<Vec<String>>,
}

impl PullsRemoveRequestedReviewersRequest {
    pub fn new(reviewers: Vec<String>) -> PullsRemoveRequestedReviewersRequest {
        PullsRemoveRequestedReviewersRequest {
            reviewers,
            team_reviewers: None,
        }
    }
}

