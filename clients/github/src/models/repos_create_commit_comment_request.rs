/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposCreateCommitCommentRequest {
    /// The contents of the comment.
    #[serde(rename = "body")]
    pub body: String,
    /// Relative path of the file to comment on.
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    /// Line index in the diff to comment on.
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// **Closing down notice**. Use **position** parameter instead. Line number in the file to comment on.
    #[serde(rename = "line", skip_serializing_if = "Option::is_none")]
    pub line: Option<i32>,
}

impl ReposCreateCommitCommentRequest {
    pub fn new(body: String) -> ReposCreateCommitCommentRequest {
        ReposCreateCommitCommentRequest {
            body,
            path: None,
            position: None,
            line: None,
        }
    }
}

