/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposCreateForkRequest {
    /// Optional parameter to specify the organization name if forking into an organization.
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<String>,
    /// When forking from an existing repository, a new name for the fork.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// When forking from an existing repository, fork with only the default branch.
    #[serde(rename = "default_branch_only", skip_serializing_if = "Option::is_none")]
    pub default_branch_only: Option<bool>,
}

impl ReposCreateForkRequest {
    pub fn new() -> ReposCreateForkRequest {
        ReposCreateForkRequest {
            organization: None,
            name: None,
            default_branch_only: None,
        }
    }
}

