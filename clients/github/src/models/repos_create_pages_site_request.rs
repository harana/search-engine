/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReposCreatePagesSiteRequest : The source branch and directory used to publish your Pages site.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposCreatePagesSiteRequest {
    /// The process in which the Page will be built. Possible values are `\"legacy\"` and `\"workflow\"`.
    #[serde(rename = "build_type", skip_serializing_if = "Option::is_none")]
    pub build_type: Option<BuildType>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<models::ReposCreatePagesSiteRequestSource>>,
}

impl ReposCreatePagesSiteRequest {
    /// The source branch and directory used to publish your Pages site.
    pub fn new() -> ReposCreatePagesSiteRequest {
        ReposCreatePagesSiteRequest {
            build_type: None,
            source: None,
        }
    }
}
/// The process in which the Page will be built. Possible values are `\"legacy\"` and `\"workflow\"`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BuildType {
    #[serde(rename = "legacy")]
    Legacy,
    #[serde(rename = "workflow")]
    Workflow,
}

impl Default for BuildType {
    fn default() -> BuildType {
        Self::Legacy
    }
}

