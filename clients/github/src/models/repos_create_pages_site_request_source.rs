/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReposCreatePagesSiteRequestSource : The source branch and directory used to publish your Pages site.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposCreatePagesSiteRequestSource {
    /// The repository branch used to publish your site's source files.
    #[serde(rename = "branch")]
    pub branch: String,
    /// The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<Path>,
}

impl ReposCreatePagesSiteRequestSource {
    /// The source branch and directory used to publish your Pages site.
    pub fn new(branch: String) -> ReposCreatePagesSiteRequestSource {
        ReposCreatePagesSiteRequestSource {
            branch,
            path: None,
        }
    }
}
/// The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Path {
    #[serde(rename = "/")]
    Slash,
    #[serde(rename = "/docs")]
    SlashDocs,
}

impl Default for Path {
    fn default() -> Path {
        Self::Slash
    }
}

