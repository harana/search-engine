/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances : Allow specific users, teams, or apps to bypass pull request requirements.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
    /// The list of user `login`s allowed to bypass pull request requirements.
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<String>>,
    /// The list of team `slug`s allowed to bypass pull request requirements.
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Vec<String>>,
    /// The list of app `slug`s allowed to bypass pull request requirements.
    #[serde(rename = "apps", skip_serializing_if = "Option::is_none")]
    pub apps: Option<Vec<String>>,
}

impl ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
    /// Allow specific users, teams, or apps to bypass pull request requirements.
    pub fn new() -> ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
        ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
            users: None,
            teams: None,
            apps: None,
        }
    }
}

