/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReposUpdateBranchProtectionRequestRequiredStatusChecks : Require status checks to pass before merging. Set to `null` to disable.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposUpdateBranchProtectionRequestRequiredStatusChecks {
    /// Require branches to be up to date before merging.
    #[serde(rename = "strict")]
    pub strict: bool,
    /// **Closing down notice**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.
    #[serde(rename = "contexts")]
    pub contexts: Vec<String>,
    /// The list of status checks to require in order to merge into this branch.
    #[serde(rename = "checks", skip_serializing_if = "Option::is_none")]
    pub checks: Option<Vec<models::ReposUpdateBranchProtectionRequestRequiredStatusChecksChecksInner>>,
}

impl ReposUpdateBranchProtectionRequestRequiredStatusChecks {
    /// Require status checks to pass before merging. Set to `null` to disable.
    pub fn new(strict: bool, contexts: Vec<String>) -> ReposUpdateBranchProtectionRequestRequiredStatusChecks {
        ReposUpdateBranchProtectionRequestRequiredStatusChecks {
            strict,
            contexts,
            checks: None,
        }
    }
}

