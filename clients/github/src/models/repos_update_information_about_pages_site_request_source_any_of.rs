/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf : Update the source for the repository. Must include the branch name and path.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf {
    /// The repository branch used to publish your site's source files.
    #[serde(rename = "branch")]
    pub branch: String,
    /// The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.
    #[serde(rename = "path")]
    pub path: Path,
}

impl ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf {
    /// Update the source for the repository. Must include the branch name and path.
    pub fn new(branch: String, path: Path) -> ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf {
        ReposUpdateInformationAboutPagesSiteRequestSourceAnyOf {
            branch,
            path,
        }
    }
}
/// The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Path {
    #[serde(rename = "/")]
    Slash,
    #[serde(rename = "/docs")]
    SlashDocs,
}

impl Default for Path {
    fn default() -> Path {
        Self::Slash
    }
}

