/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReposUpdateReleaseAssetRequest {
    /// The file name of the asset.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// An alternate short description of the asset. Used in place of the filename.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
}

impl ReposUpdateReleaseAssetRequest {
    pub fn new() -> ReposUpdateReleaseAssetRequest {
        ReposUpdateReleaseAssetRequest {
            name: None,
            label: None,
            state: None,
        }
    }
}

