/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryAdvisoryCreateVulnerabilitiesInner {
    #[serde(rename = "package")]
    pub package: Box<models::RepositoryAdvisoryCreateVulnerabilitiesInnerPackage>,
    /// The range of the package versions affected by the vulnerability.
    #[serde(rename = "vulnerable_version_range", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vulnerable_version_range: Option<Option<String>>,
    /// The package version(s) that resolve the vulnerability.
    #[serde(rename = "patched_versions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub patched_versions: Option<Option<String>>,
    /// The functions in the package that are affected.
    #[serde(rename = "vulnerable_functions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vulnerable_functions: Option<Option<Vec<String>>>,
}

impl RepositoryAdvisoryCreateVulnerabilitiesInner {
    pub fn new(package: models::RepositoryAdvisoryCreateVulnerabilitiesInnerPackage) -> RepositoryAdvisoryCreateVulnerabilitiesInner {
        RepositoryAdvisoryCreateVulnerabilitiesInner {
            package: Box::new(package),
            vulnerable_version_range: None,
            patched_versions: None,
            vulnerable_functions: None,
        }
    }
}

