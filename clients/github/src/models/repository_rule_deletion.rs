/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RepositoryRuleDeletion : Only allow users with bypass permissions to delete matching refs.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRuleDeletion {
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl RepositoryRuleDeletion {
    /// Only allow users with bypass permissions to delete matching refs.
    pub fn new(r#type: Type) -> RepositoryRuleDeletion {
        RepositoryRuleDeletion {
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "deletion")]
    Deletion,
}

impl Default for Type {
    fn default() -> Type {
        Self::Deletion
    }
}

