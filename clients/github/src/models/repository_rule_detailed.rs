/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RepositoryRuleDetailed : A repository rule with ruleset details.
/// A repository rule with ruleset details.
#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum RepositoryRuleDetailed {
    RepositoryRuleDetailedOneOf(Box<models::RepositoryRuleDetailedOneOf>),
    RepositoryRuleDetailedOneOf1(Box<models::RepositoryRuleDetailedOneOf1>),
    RepositoryRuleDetailedOneOf2(Box<models::RepositoryRuleDetailedOneOf2>),
    RepositoryRuleDetailedOneOf3(Box<models::RepositoryRuleDetailedOneOf3>),
    RepositoryRuleDetailedOneOf4(Box<models::RepositoryRuleDetailedOneOf4>),
    RepositoryRuleDetailedOneOf5(Box<models::RepositoryRuleDetailedOneOf5>),
    RepositoryRuleDetailedOneOf6(Box<models::RepositoryRuleDetailedOneOf6>),
    RepositoryRuleDetailedOneOf7(Box<models::RepositoryRuleDetailedOneOf7>),
    RepositoryRuleDetailedOneOf8(Box<models::RepositoryRuleDetailedOneOf8>),
    RepositoryRuleDetailedOneOf9(Box<models::RepositoryRuleDetailedOneOf9>),
    RepositoryRuleDetailedOneOf10(Box<models::RepositoryRuleDetailedOneOf10>),
    RepositoryRuleDetailedOneOf11(Box<models::RepositoryRuleDetailedOneOf11>),
    RepositoryRuleDetailedOneOf12(Box<models::RepositoryRuleDetailedOneOf12>),
    RepositoryRuleDetailedOneOf13(Box<models::RepositoryRuleDetailedOneOf13>),
    RepositoryRuleDetailedOneOf14(Box<models::RepositoryRuleDetailedOneOf14>),
    RepositoryRuleDetailedOneOf15(Box<models::RepositoryRuleDetailedOneOf15>),
    RepositoryRuleDetailedOneOf16(Box<models::RepositoryRuleDetailedOneOf16>),
    RepositoryRuleDetailedOneOf17(Box<models::RepositoryRuleDetailedOneOf17>),
    RepositoryRuleDetailedOneOf18(Box<models::RepositoryRuleDetailedOneOf18>),
    RepositoryRuleDetailedOneOf19(Box<models::RepositoryRuleDetailedOneOf19>),
    RepositoryRuleDetailedOneOf20(Box<models::RepositoryRuleDetailedOneOf20>),
}

impl Default for RepositoryRuleDetailed {
    fn default() -> Self {
        Self::RepositoryRuleDetailedOneOf(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "creation")]
    Creation,
    #[serde(rename = "update")]
    Update,
    #[serde(rename = "deletion")]
    Deletion,
    #[serde(rename = "required_linear_history")]
    RequiredLinearHistory,
    #[serde(rename = "merge_queue")]
    MergeQueue,
    #[serde(rename = "required_deployments")]
    RequiredDeployments,
    #[serde(rename = "required_signatures")]
    RequiredSignatures,
    #[serde(rename = "pull_request")]
    PullRequest,
    #[serde(rename = "required_status_checks")]
    RequiredStatusChecks,
    #[serde(rename = "non_fast_forward")]
    NonFastForward,
    #[serde(rename = "commit_message_pattern")]
    CommitMessagePattern,
    #[serde(rename = "commit_author_email_pattern")]
    CommitAuthorEmailPattern,
    #[serde(rename = "committer_email_pattern")]
    CommitterEmailPattern,
    #[serde(rename = "branch_name_pattern")]
    BranchNamePattern,
    #[serde(rename = "tag_name_pattern")]
    TagNamePattern,
    #[serde(rename = "file_path_restriction")]
    FilePathRestriction,
    #[serde(rename = "max_file_path_length")]
    MaxFilePathLength,
    #[serde(rename = "file_extension_restriction")]
    FileExtensionRestriction,
    #[serde(rename = "max_file_size")]
    MaxFileSize,
    #[serde(rename = "workflows")]
    Workflows,
    #[serde(rename = "code_scanning")]
    CodeScanning,
}

impl Default for Type {
    fn default() -> Type {
        Self::Creation
    }
}
/// The type of source for the ruleset that includes this rule.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RulesetSourceType {
    #[serde(rename = "Repository")]
    Repository,
    #[serde(rename = "Organization")]
    Organization,
}

impl Default for RulesetSourceType {
    fn default() -> RulesetSourceType {
        Self::Repository
    }
}

