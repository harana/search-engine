/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RepositoryRuleParamsReviewer : A required reviewing team
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRuleParamsReviewer {
    /// ID of the reviewer which must review changes to matching files.
    #[serde(rename = "id")]
    pub id: i32,
    /// The type of the reviewer
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl RepositoryRuleParamsReviewer {
    /// A required reviewing team
    pub fn new(id: i32, r#type: Type) -> RepositoryRuleParamsReviewer {
        RepositoryRuleParamsReviewer {
            id,
            r#type,
        }
    }
}
/// The type of the reviewer
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Team")]
    Team,
}

impl Default for Type {
    fn default() -> Type {
        Self::Team
    }
}

