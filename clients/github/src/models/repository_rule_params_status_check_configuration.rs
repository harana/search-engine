/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RepositoryRuleParamsStatusCheckConfiguration : Required status check
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRuleParamsStatusCheckConfiguration {
    /// The status check context name that must be present on the commit.
    #[serde(rename = "context")]
    pub context: String,
    /// The optional integration ID that this status check must originate from.
    #[serde(rename = "integration_id", skip_serializing_if = "Option::is_none")]
    pub integration_id: Option<i32>,
}

impl RepositoryRuleParamsStatusCheckConfiguration {
    /// Required status check
    pub fn new(context: String) -> RepositoryRuleParamsStatusCheckConfiguration {
        RepositoryRuleParamsStatusCheckConfiguration {
            context,
            integration_id: None,
        }
    }
}

