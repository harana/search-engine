/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner {
    /// The ID of the push protection bypass placeholder. This value is returned on any push protected routes.
    #[serde(rename = "placeholder_id", skip_serializing_if = "Option::is_none")]
    pub placeholder_id: Option<String>,
    #[serde(rename = "token_type", skip_serializing_if = "Option::is_none")]
    pub token_type: Option<String>,
}

impl RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner {
    pub fn new() -> RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner {
        RepositoryRuleViolationErrorMetadataSecretScanningBypassPlaceholdersInner {
            placeholder_id: None,
            token_type: None,
        }
    }
}

