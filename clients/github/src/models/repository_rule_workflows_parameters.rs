/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRuleWorkflowsParameters {
    /// Allow repositories and branches to be created if a check would otherwise prohibit it.
    #[serde(rename = "do_not_enforce_on_create", skip_serializing_if = "Option::is_none")]
    pub do_not_enforce_on_create: Option<bool>,
    /// Workflows that must pass for this rule to pass.
    #[serde(rename = "workflows")]
    pub workflows: Vec<models::RepositoryRuleParamsWorkflowFileReference>,
}

impl RepositoryRuleWorkflowsParameters {
    pub fn new(workflows: Vec<models::RepositoryRuleParamsWorkflowFileReference>) -> RepositoryRuleWorkflowsParameters {
        RepositoryRuleWorkflowsParameters {
            do_not_enforce_on_create: None,
            workflows,
        }
    }
}

