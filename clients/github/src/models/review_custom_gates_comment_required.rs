/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReviewCustomGatesCommentRequired {
    /// The name of the environment to approve or reject.
    #[serde(rename = "environment_name")]
    pub environment_name: String,
    /// Comment associated with the pending deployment protection rule. **Required when state is not provided.**
    #[serde(rename = "comment")]
    pub comment: String,
}

impl ReviewCustomGatesCommentRequired {
    pub fn new(environment_name: String, comment: String) -> ReviewCustomGatesCommentRequired {
        ReviewCustomGatesCommentRequired {
            environment_name,
            comment,
        }
    }
}

