/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunnerLabel : A label for a self hosted runner
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunnerLabel {
    /// Unique identifier of the label.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Name of the label.
    #[serde(rename = "name")]
    pub name: String,
    /// The type of label. Read-only labels are applied automatically when the runner is configured.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl RunnerLabel {
    /// A label for a self hosted runner
    pub fn new(name: String) -> RunnerLabel {
        RunnerLabel {
            id: None,
            name,
            r#type: None,
        }
    }
}
/// The type of label. Read-only labels are applied automatically when the runner is configured.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "read-only")]
    ReadOnly,
    #[serde(rename = "custom")]
    Custom,
}

impl Default for Type {
    fn default() -> Type {
        Self::ReadOnly
    }
}

