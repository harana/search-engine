/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SecretScanningAlertResolution : **Required when the `state` is `resolved`.** The reason for resolving the alert.
/// **Required when the `state` is `resolved`.** The reason for resolving the alert.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SecretScanningAlertResolution {
    #[serde(rename = "false_positive")]
    FalsePositive,
    #[serde(rename = "wont_fix")]
    WontFix,
    #[serde(rename = "revoked")]
    Revoked,
    #[serde(rename = "used_in_tests")]
    UsedInTests,

}

impl std::fmt::Display for SecretScanningAlertResolution {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FalsePositive => write!(f, "false_positive"),
            Self::WontFix => write!(f, "wont_fix"),
            Self::Revoked => write!(f, "revoked"),
            Self::UsedInTests => write!(f, "used_in_tests"),
        }
    }
}

impl Default for SecretScanningAlertResolution {
    fn default() -> SecretScanningAlertResolution {
        Self::FalsePositive
    }
}

