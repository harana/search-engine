/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecretScanningPushProtectionBypass {
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<models::SecretScanningPushProtectionBypassReason>,
    /// The time that the bypass will expire in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    #[serde(rename = "expire_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub expire_at: Option<Option<String>>,
    /// The token type this bypass is for.
    #[serde(rename = "token_type", skip_serializing_if = "Option::is_none")]
    pub token_type: Option<String>,
}

impl SecretScanningPushProtectionBypass {
    pub fn new() -> SecretScanningPushProtectionBypass {
        SecretScanningPushProtectionBypass {
            reason: None,
            expire_at: None,
            token_type: None,
        }
    }
}

