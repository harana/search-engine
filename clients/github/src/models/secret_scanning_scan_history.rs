/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecretScanningScanHistory {
    #[serde(rename = "incremental_scans", skip_serializing_if = "Option::is_none")]
    pub incremental_scans: Option<Vec<models::SecretScanningScan>>,
    #[serde(rename = "pattern_update_scans", skip_serializing_if = "Option::is_none")]
    pub pattern_update_scans: Option<Vec<models::SecretScanningScan>>,
    #[serde(rename = "backfill_scans", skip_serializing_if = "Option::is_none")]
    pub backfill_scans: Option<Vec<models::SecretScanningScan>>,
    #[serde(rename = "custom_pattern_backfill_scans", skip_serializing_if = "Option::is_none")]
    pub custom_pattern_backfill_scans: Option<Vec<models::SecretScanningScanHistoryCustomPatternBackfillScansInner>>,
}

impl SecretScanningScanHistory {
    pub fn new() -> SecretScanningScanHistory {
        SecretScanningScanHistory {
            incremental_scans: None,
            pattern_update_scans: None,
            backfill_scans: None,
            custom_pattern_backfill_scans: None,
        }
    }
}

