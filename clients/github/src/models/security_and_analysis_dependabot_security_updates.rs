/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SecurityAndAnalysisDependabotSecurityUpdates : Enable or disable Dependabot security updates for the repository.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecurityAndAnalysisDependabotSecurityUpdates {
    /// The enablement status of Dependabot security updates for the repository.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl SecurityAndAnalysisDependabotSecurityUpdates {
    /// Enable or disable Dependabot security updates for the repository.
    pub fn new() -> SecurityAndAnalysisDependabotSecurityUpdates {
        SecurityAndAnalysisDependabotSecurityUpdates {
            status: None,
        }
    }
}
/// The enablement status of Dependabot security updates for the repository.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "enabled")]
    Enabled,
    #[serde(rename = "disabled")]
    Disabled,
}

impl Default for Status {
    fn default() -> Status {
        Self::Enabled
    }
}

