/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersUpdateAuthenticatedRequest {
    /// The new name of the user.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The publicly visible email address of the user.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The new blog URL of the user.
    #[serde(rename = "blog", skip_serializing_if = "Option::is_none")]
    pub blog: Option<String>,
    /// The new Twitter username of the user.
    #[serde(rename = "twitter_username", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twitter_username: Option<Option<String>>,
    /// The new company of the user.
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
    /// The new location of the user.
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    /// The new hiring availability of the user.
    #[serde(rename = "hireable", skip_serializing_if = "Option::is_none")]
    pub hireable: Option<bool>,
    /// The new short biography of the user.
    #[serde(rename = "bio", skip_serializing_if = "Option::is_none")]
    pub bio: Option<String>,
}

impl UsersUpdateAuthenticatedRequest {
    pub fn new() -> UsersUpdateAuthenticatedRequest {
        UsersUpdateAuthenticatedRequest {
            name: None,
            email: None,
            blog: None,
            twitter_username: None,
            company: None,
            location: None,
            hireable: None,
            bio: None,
        }
    }
}

