/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ValidationError : Validation Error
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ValidationError {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "documentation_url")]
    pub documentation_url: String,
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::ValidationErrorErrorsInner>>,
}

impl ValidationError {
    /// Validation Error
    pub fn new(message: String, documentation_url: String) -> ValidationError {
        ValidationError {
            message,
            documentation_url,
            errors: None,
        }
    }
}

