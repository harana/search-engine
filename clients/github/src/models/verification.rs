/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Verification {
    #[serde(rename = "verified")]
    pub verified: bool,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "payload", deserialize_with = "Option::deserialize")]
    pub payload: Option<String>,
    #[serde(rename = "signature", deserialize_with = "Option::deserialize")]
    pub signature: Option<String>,
    #[serde(rename = "verified_at", deserialize_with = "Option::deserialize")]
    pub verified_at: Option<String>,
}

impl Verification {
    pub fn new(verified: bool, reason: String, payload: Option<String>, signature: Option<String>, verified_at: Option<String>) -> Verification {
        Verification {
            verified,
            reason,
            payload,
            signature,
            verified_at,
        }
    }
}

