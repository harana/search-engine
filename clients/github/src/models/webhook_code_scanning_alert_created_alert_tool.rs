/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookCodeScanningAlertCreatedAlertTool {
    #[serde(rename = "guid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub guid: Option<Option<String>>,
    /// The name of the tool used to generate the code scanning analysis alert.
    #[serde(rename = "name")]
    pub name: String,
    /// The version of the tool used to detect the alert.
    #[serde(rename = "version", deserialize_with = "Option::deserialize")]
    pub version: Option<String>,
}

impl WebhookCodeScanningAlertCreatedAlertTool {
    pub fn new(name: String, version: Option<String>) -> WebhookCodeScanningAlertCreatedAlertTool {
        WebhookCodeScanningAlertCreatedAlertTool {
            guid: None,
            name,
            version,
        }
    }
}

