/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookProjectCardMovedProjectCard {
    #[serde(rename = "after_id", deserialize_with = "Option::deserialize")]
    pub after_id: Option<f64>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "column_id")]
    pub column_id: i32,
    #[serde(rename = "column_url")]
    pub column_url: String,
    #[serde(rename = "content_url", skip_serializing_if = "Option::is_none")]
    pub content_url: Option<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "creator", deserialize_with = "Option::deserialize")]
    pub creator: Option<Box<models::WebhookProjectCardMovedProjectCardAllOfCreator>>,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "node_id")]
    pub node_id: String,
    #[serde(rename = "note", deserialize_with = "Option::deserialize")]
    pub note: Option<String>,
    #[serde(rename = "project_url")]
    pub project_url: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "url")]
    pub url: String,
}

impl WebhookProjectCardMovedProjectCard {
    pub fn new(after_id: Option<f64>, archived: bool, column_id: i32, column_url: String, created_at: String, creator: Option<models::WebhookProjectCardMovedProjectCardAllOfCreator>, id: i32, node_id: String, note: Option<String>, project_url: String, updated_at: String, url: String) -> WebhookProjectCardMovedProjectCard {
        WebhookProjectCardMovedProjectCard {
            after_id,
            archived,
            column_id,
            column_url,
            content_url: None,
            created_at,
            creator: if let Some(x) = creator {Some(Box::new(x))} else {None},
            id,
            node_id,
            note,
            project_url,
            updated_at,
            url,
        }
    }
}

