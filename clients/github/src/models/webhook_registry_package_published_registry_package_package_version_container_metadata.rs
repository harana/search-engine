/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata {
    #[serde(rename = "labels", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub labels: Option<Option<serde_json::Value>>,
    #[serde(rename = "manifest", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub manifest: Option<Option<serde_json::Value>>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<Box<models::WebhookPackagePublishedPackagePackageVersionContainerMetadataTag>>,
}

impl WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata {
    pub fn new() -> WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata {
        WebhookRegistryPackagePublishedRegistryPackagePackageVersionContainerMetadata {
            labels: None,
            manifest: None,
            tag: None,
        }
    }
}

