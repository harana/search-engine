/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner {
    #[serde(rename = "content_type")]
    pub content_type: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "download_url")]
    pub download_url: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "md5", deserialize_with = "Option::deserialize")]
    pub md5: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "sha1", deserialize_with = "Option::deserialize")]
    pub sha1: Option<String>,
    #[serde(rename = "sha256", deserialize_with = "Option::deserialize")]
    pub sha256: Option<String>,
    #[serde(rename = "size")]
    pub size: i32,
    #[serde(rename = "state", deserialize_with = "Option::deserialize")]
    pub state: Option<String>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner {
    pub fn new(content_type: String, created_at: String, download_url: String, id: i32, md5: Option<String>, name: String, sha1: Option<String>, sha256: Option<String>, size: i32, state: Option<String>, updated_at: String) -> WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner {
        WebhookRegistryPackagePublishedRegistryPackagePackageVersionPackageFilesInner {
            content_type,
            created_at,
            download_url,
            id,
            md5,
            name,
            sha1,
            sha256,
            size,
            state,
            updated_at,
        }
    }
}

