/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease {
    #[serde(rename = "author")]
    pub author: Box<models::WebhookRegistryPackagePublishedRegistryPackageOwner>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "draft")]
    pub draft: bool,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "prerelease")]
    pub prerelease: bool,
    #[serde(rename = "published_at")]
    pub published_at: String,
    #[serde(rename = "tag_name")]
    pub tag_name: String,
    #[serde(rename = "target_commitish")]
    pub target_commitish: String,
    #[serde(rename = "url")]
    pub url: String,
}

impl WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease {
    pub fn new(author: models::WebhookRegistryPackagePublishedRegistryPackageOwner, created_at: String, draft: bool, html_url: String, id: i32, name: String, prerelease: bool, published_at: String, tag_name: String, target_commitish: String, url: String) -> WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease {
        WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease {
            author: Box::new(author),
            created_at,
            draft,
            html_url,
            id,
            name,
            prerelease,
            published_at,
            tag_name,
            target_commitish,
            url,
        }
    }
}

