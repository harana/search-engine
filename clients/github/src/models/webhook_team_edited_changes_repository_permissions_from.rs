/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookTeamEditedChangesRepositoryPermissionsFrom {
    /// The previous version of the team member's `admin` permission on a repository, if the action was `edited`.
    #[serde(rename = "admin", skip_serializing_if = "Option::is_none")]
    pub admin: Option<bool>,
    /// The previous version of the team member's `pull` permission on a repository, if the action was `edited`.
    #[serde(rename = "pull", skip_serializing_if = "Option::is_none")]
    pub pull: Option<bool>,
    /// The previous version of the team member's `push` permission on a repository, if the action was `edited`.
    #[serde(rename = "push", skip_serializing_if = "Option::is_none")]
    pub push: Option<bool>,
}

impl WebhookTeamEditedChangesRepositoryPermissionsFrom {
    pub fn new() -> WebhookTeamEditedChangesRepositoryPermissionsFrom {
        WebhookTeamEditedChangesRepositoryPermissionsFrom {
            admin: None,
            pull: None,
            push: None,
        }
    }
}

