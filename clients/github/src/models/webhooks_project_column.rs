/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhooksProjectColumn {
    #[serde(rename = "after_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub after_id: Option<Option<i32>>,
    #[serde(rename = "cards_url")]
    pub cards_url: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The unique identifier of the project column
    #[serde(rename = "id")]
    pub id: i32,
    /// Name of the project column
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "node_id")]
    pub node_id: String,
    #[serde(rename = "project_url")]
    pub project_url: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "url")]
    pub url: String,
}

impl WebhooksProjectColumn {
    pub fn new(cards_url: String, created_at: String, id: i32, name: String, node_id: String, project_url: String, updated_at: String, url: String) -> WebhooksProjectColumn {
        WebhooksProjectColumn {
            after_id: None,
            cards_url,
            created_at,
            id,
            name,
            node_id,
            project_url,
            updated_at,
            url,
        }
    }
}

